using vector;
int id[256],letter[10];
function bool strchr(string str,char ch)
{
    int len=str.size();
    for(int i=0;i<len;i+=1)
    {
        if(str[i]==ch)
        {
            return true;
        }
    }
    return false;
}
int main()
{
    string input="";
    while(true)
    {
        input=std.input_string();
        if(input=="#")
        {
            break;
        }
        int n=0;
        for(char ch='A';ch<='Z';ch+=1)
        {
            if(strchr(input,ch))
            {
                id[ch]=n+=1;
                letter[id[ch]]=ch;
            }
        }
        int len=input.size(),p=0,q=0;
        vector<int> u,v;
        while(true)
        {
            while(p<len&&input[p]!=':'){p++;}
            if(p==len){break;}
            while(q<len&&input[q]!=';'){q++;}
            for(int i=p+1;i<q;i+=1)
            {
                u.push_back(id[input[p-1]]);
                v.push_back(id[input[i]]);
            }
            p+=1;q+=1;
        }
        int P[10],bestP[10],pos[10],ans=n;
        for(int i=0;i<n;i+=1){
            P[i]=i;
        }
        do{
            for(int i=0;i<n;i+=1)
            {
                pos[P[i]]=i;
            }
            int bandwidth=0;
            for(int i=0;i<u.size();i+=1){bandwidth=max(bandwidth,abs(pos[u[i]]-pos[v[i]]));}
            if(bandwidth<ans){
                ans=bandwidth;
                for(int j=0;j<10;j+=1)
                {
                    bestP[j]=P[j];
                }
            }
        }while(next_premutation)
    }
}