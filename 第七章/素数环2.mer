function bool is_prime(int x){	for (int i = 2; i * i <= x; i+=1)	{		if (mod(x,i)==0)		{			return false;		}	}	return true;}bool is_p[1000] = { true };int vis[100] = { 0 };function void set_prime(){	for (int i = 2; i < 1000; i += 1)	{		is_p[i] = is_prime(i);	}}int n=0;int A[100];function void dfs(int cur){	if(cur==n && is_p[A[cur-1]+A[0]]==1)	{		for(int i=0;i<n;i+=1)		{			std.cout(A[i],' ');		}		std.cout('\n');	}	else{	for(int i=2;i<=n;i+=1)	{		if(vis[i]==false&&is_p[i+A[cur-1]])		{			A[cur]=i;			vis[i]=1;			dfs(cur+1);			vis[i]=0;		}	}	}}	program main{	A[0]=1;	set_prime();	n=6;	dfs(1);}	